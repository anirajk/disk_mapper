#!/bin/bash 

# Source function library.
. /etc/init.d/functions

PIDFILE=/var/run/disk_mapper.pid
LOCKFILE=/var/run/disk_mapper.lock

if [ $UID -ne 0 ];
then
    echo "Please run as root"
    exit 1
fi

status(){
    if [ -e $PIDFILE ]; 
    then
        PID=$(cat $PIDFILE) 
        kill -s 0 $PID 2> /dev/null && echo "Disk Mapper is running with pid $PID" && exit 0
        echo "Disk Mapper is not running" 
    else
        echo "Disk Mapper is not running" 
    fi
}

start(){
    if [ -e $PIDFILE ];
    then
        PID=$(cat $PIDFILE) 
        kill -s 0 $PID 2> /dev/null && echo "Disk Mapper is running with pid $PID" && exit 0
    fi

    #su - diskmapper -c "python /opt/disk_mapper/diskmapper_daemon.py > /dev/null 2>&1 &"
    #su -s /bin/sh apache -c "python /opt/disk_mapper/diskmapper_daemon.py > /dev/null 2>&1 &"
    echo -n "Starting Disk Mapper"
    daemon --pidfile=${PIDFILE} --user=apache 'python /opt/disk_mapper/diskmapper_daemon.py > /dev/null 2>&1 & '
    pid=$(ps ax | grep 'python /opt/disk_mapper/diskmapper_daemon.py' | grep -v grep | awk '{print $1}')
    echo $pid > $PIDFILE
    touch $LOCKFILE && chown apache $LOCKFILE
    echo
}


stop(){
    echo -n "Stopping Disk Mapper"
    rm -rf $LOCKFILE
    sleep 5
    if [ ! -f $LOCKFILE ];
    then
        echo_success
    else
        echo_failure
    fi
    echo
    rm -rf $PIDFILE
}

case "$1" in
    start)
        start 
        ;;
    stop)
        stop
        ;;
    status)
        status; 
        ;;
    restart)
        stop
        start
        ;;
    *)
    echo $"Usage: $0 {start|stop|status|restart}"
    exit 1
esac


